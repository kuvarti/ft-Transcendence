version: '3.8'

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    volumes:
      - frontendV:/dist/out
    networks:
      - app-network
    environment:
      NODE_ENV: production

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - NGINX_HOST=nginx
      - NGINX_PORT=80
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - frontendV:/usr/share/nginx/html
      - ./Nginx/Config/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  db:
    build:
      context: ./Database
      dockerfile: Dockerfile
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: FtTranscendence
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
    networks:
      - app-network

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  db:
    name: databaseVolume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./Database/volume
  frontendV:
    name: frontVolume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./Frontend/volume